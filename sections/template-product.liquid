<link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css" />
<script src="{{ 'carousels.js' | asset_url }}" defer></script>
<link rel="stylesheet" href="{{ 'carousels.css' | asset_url }}" />

{% assign selected_variant = product.selected_or_first_available_variant %}

<script src="{{ 'product-model.js' | asset_url }}" defer></script>

<style>
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto !important;
    height: 20px;
  }
  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 20px;
  }
  .swiper-pagination {
    color: black;
    bottom: 0 !important;
  }
  .swiper-pagination-bullet-active {
    background: black !important;
  }
  .product--information {
    height: fit-content;
  }
</style>

<div class="product-outer containercustom" x-data="{ productModalOpen: false }">

  <div class="grid grid-cols-1 lg:grid-cols-2 gap-3 mx-auto">

    <div class="product-left py-12 pl-0 lg:p-12 lg:pl-0 relative">
      <!-- Product Images -->

      <div class="bg-lightgrey stretch absolute top-0 right-0 h-full"></div>

      <div class="swiper pdp-image-swiper swiper-initialized swiper-horizontal swiper-pointer-events" navigation="true">
        <div class="swiper-wrapper max-w-[100vw]">
          {% for media in product.media %}
            <div class="swiper-slide">
              {% render 'product-media', media: media %}
            </div>
          {% endfor %}
        </div>
        <div class="swiper-button-prev pdp-image-swiper-button-prev absolute top-1/2 left-0 transform -translate-y-1/2"></div>
        <div class="swiper-button-next pdp-image-swiper-button-next absolute top-1/2 left-0 transform -translate-y-1/2"></div>
      </div>

      <div class="swiper-dots">
        <div class="pdp-image-swiper-pagination swiper-pagination flex justify-center"></div>
      </div>

    </div>

    <div class="product-right pt-16 lg:p-12">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        <input
          type="hidden"
          name="id"
          value="{{ selected_variant.id }}">

        {% for block in section.blocks %}
          {% case block.type %}
            
              {% when 'vendor' %}
              <div class="my-0">
                <span class="text-xs text-grey uppercase">{{ product.vendor }}</span>
              </div>
              {% when 'title' %}
              <div class="my-0">
                <h1 class="text-3xl text-grey font-heading font-big font-bold uppercase leading-10 mb-1">{{ product.title }}</h1>
              </div>
              {% when 'price' %}
              <div class="my-0 mb-8" id="price-{{ section.id }}">
                <span class="text-base text-gray-500 line-through">{{ selected_variant.compare_at_price | money }}</span>
                <span class="text-lg text-grey">{{ selected_variant.price | money }}</span>

                {% if selected_variant.price < selected_variant.compare_at_price %}
                  <span class="px-5 py-1 text-sm font-bold bg-red rounded-full text-white mx-4">Sale</span>
                {% endif %}

              </div>

            {% when 'description' %}
              <div x-data="{ open: false }" class="border-b border-gray-200 mb-4">
                <button 
                  @click.prevent="open = !open" 
                  type="button"
                  class="w-full flex justify-between items-center text-left p-4 bg-lightgrey"
                >
                  <span>Product Description</span>
                  <svg class="w-4 h-4 transition-transform" :class="{'rotate-180': open}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="6 9 12 15 18 9"></polyline>
                  </svg>
                </button>
                
                <div 
                  x-show="open" 
                  x-transition:enter="transition ease-out duration-200" 
                  x-transition:enter-start="opacity-0 transform -translate-y-2" 
                  x-transition:enter-end="opacity-100 transform translate-y-0" 
                  x-transition:leave="transition ease-in duration-200" 
                  x-transition:leave-start="opacity-100 transform translate-y-0" 
                  x-transition:leave-end="opacity-0 transform -translate-y-2" 
                  class="p-4"
                >
                  <p class="text-sm text-gray-600">{{ product.description }}</p>
                </div>
              </div>
            
            {% if product.metafields.custom.delivery_information.value  %}
              <div x-data="{ open: false }" class="border-b border-gray-200 mb-4">
                <button 
                  @click.prevent="open = !open" 
                  type="button"
                  class="w-full flex justify-between items-center text-left p-4 bg-lightgrey"
                >
                  <span>Delivery Information</span>
                  <svg class="w-4 h-4 transition-transform" :class="{'rotate-180': open}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <polyline points="6 9 12 15 18 9"></polyline>
                  </svg>
                </button>
                
                <div 
                  x-show="open" 
                  x-transition:enter="transition ease-out duration-200" 
                  x-transition:enter-start="opacity-0 transform -translate-y-2" 
                  x-transition:enter-end="opacity-100 transform translate-y-0" 
                  x-transition:leave="transition ease-in duration-200" 
                  x-transition:leave-start="opacity-100 transform translate-y-0" 
                  x-transition:leave-end="opacity-0 transform -translate-y-2" 
                  class="p-4"
                >
                  <p class="text-sm text-gray-600">{{ product.metafields.custom.delivery_information.value }}</p>
                </div>
              </div>
            {% endif %}
            
            {% when 'variant_selector' %}
            <div class="my-3">
              {% unless product.has_only_default_variant %}
                <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                  {% for option in product.options_with_values %}
                    <label class="mb-4" for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                    <div class="my-2">
                      <div class="flex flex-wrap gap-2">
                        {% for value in option.values %}
                          {% assign variant_image = nil %}
                          {% for variant in product.variants %}
                            {% if variant.options contains value %}
                              {% assign variant_image = variant.image %}
                              {% break %}
                            {% endif %}
                          {% endfor %}

                          <label class="relative">
                            <input
                              type="radio"
                              name="options[{{ option.name | escape }}]"
                              value="{{ value | escape }}"
                              {% if option.selected_value == value %}checked="checked"{% endif %}
                              class="sr-only peer"
                            >
                            {% if option.name contains 'Color' or option.name contains 'Colour' %}
                                <span 
                                  class="w-24 h-40 border bg-cover bg-center bg-no-repeat block peer-checked:border-2 peer-checked:border-gray-400 hover:border-gray-400"
                                  {% if variant_image %}
                                    style="background-image: url('{{ variant_image | img_url: '300x', scale: 2 }}')"
                                  {% endif %}>
                                </span>
                            {% else %}
                              <span class="w-24 h-24 border flex items-center justify-center peer-checked:border-2 peer-checked:border-gray-400 hover:border-gray-400">
                                {{ value }}
                              </span>
                            {% endif %}
                          </label>
                        {% endfor %}
                      </div>
                    </div>

                    <script type="application/json">
                      {{ product.variants | json }}
                    </script>
                  {% endfor %}
                </variant-selector>
              {% endunless %}
            </div>

            {% when 'quantity' %}
            <div class="my-3">
              <label for="Quantity-{{ section.id }}">Quantity</label>

              <div class="my-2">
                <input
                  type="number"
                  name="quantity"
                  id="Quantity-{{ section.id }}"
                  value="1"
                  min="1"
                  class="w-full border px-6 py-3 rounded-full">
              </div>
            </div>

            {% when 'checkout_buttons' %}
            <div class="my-12" id="add-to-cart-button-{{ section.id }}">
              
              {% if selected_variant.available == false %}
                <p class="mx-auto block text-center">Sold out</p>
              {% else %}
                <button type="submit" name="checkout" {% if selected_variant.available == false %}disabled{% endif %} class="relative flex items-center font-heading font-light bg-white border-yellow border-2 text-black text-[13px] text-base rounded-[40px] py-[15px] px-[25px] text-center tracking-wide uppercase group transition w-full">
                  <span class="leading-none mx-auto ">Checkout</span>
                </button>
              {% endif %}

            </div>

          {% else %}
           
        {% endcase %}

        {% endfor %}

       

      {% endform %}
    </div>
  </div>

  <style>
    .media model-viewer,
    .media > * {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  </style>

  <!-- <div id="productModelModal">
  <div x-show="productModalOpen" class="w-full h-full z-50 items-center fixed inset-0">
  <div class="relative w-full h-full bg-white">
  <div class="relative">
  <div class="flex justify-between items-start p-5 border-b">
  <h2 class="text-xl font-bold text-gray-700">3D Model Preview</h2>
  <button x-on:click="productModalOpen = false" class="text-gray-400 bg-transparent hover:text-gray-700 rounded text-sm p-2 ml-auto inline-flex items-center">
  {% render 'icon-close' %}
  </button>
  </div>

  <div id="body" class="media block relative" style="padding-top: min(calc(100vh - 5rem), 100%);">

  </div>
  </div>
  </div>
  </div>
  </div> --></div>
<script>
  class VariantSelector extends HTMLElement {
    constructor() {
      super();
      this.addEventListener("change", this.onVariantChange);
    }

    onVariantChange() {
      this.getSelectedOptions();
      this.getSelectedVariant();

      if (this.currentVariant) {
        this.updateURL();
        this.updateFormID();
        this.updatePrice();
        this.updateAddToCartButton();
      }
    }

    getSelectedOptions() {
      this.options = Array.from(
        this.querySelectorAll('input[type="radio"]:checked'), 
        (radio) => radio.value
      );
      console.log(this.options);
    }

    getVariantJSON() {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
      return this.variantData;
    }

    getSelectedVariant() {
      this.currentVariant = this.getVariantJSON().find((variant) => {
        const findings = !variant.options.map((option, index) => {
          return this.options[index] === option;
        }).includes(false);

        if (findings) return variant;
      });

      console.log(this.currentVariant);
    }

    updateURL() {
      if (!this.currentVariant) 
        return;
      


      window.history.replaceState({}, '', `${
        this.dataset.url
      }?variant=${
        this.currentVariant.id
      }`);
    }

    updateFormID() {
      const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
      form_input.value = this.currentVariant.id;
    }

    updatePrice() {
      fetch(`${
        this.dataset.url
      }?variant=${
        this.currentVariant.id
      }&section_id=${
        this.dataset.section
      }`).then((response) => response.text()).then((responseText) => {
        const id = `price-${
          this.dataset.section
        }`;
        const html = new DOMParser().parseFromString(responseText, 'text/html');

        const oldPrice = document.getElementById(id);
        const newPrice = html.getElementById(id);

        if (oldPrice && newPrice) 
          oldPrice.innerHTML = newPrice.innerHTML;
        


      });
    }

    updateAddToCartButton() {
      const buttonContainer = document.getElementById(`add-to-cart-button-${this.dataset.section}`);
      
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then((response) => response.text())
        .then((responseText) => {
          const html = new DOMParser().parseFromString(responseText, 'text/html');
          const newButtonContainer = html.getElementById(`add-to-cart-button-${this.dataset.section}`);
          
          if (buttonContainer && newButtonContainer) {
            buttonContainer.innerHTML = newButtonContainer.innerHTML;
          }
        });
    }
  }

  customElements.define("variant-selector", VariantSelector);
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    try {
      const swiper = new Swiper('.swiper', {
        direction: 'horizontal',

        pagination: {
          el: '.swiper-pagination'
        },

        navigation: {
          prevEl: '.swiper-button-prev',
          nextEl: '.swiper-button-next'
        }
      })
    } catch (e) {
      console.log("SwiperJS is not defined");
    }
  })
</script>

{% schema %}
  {
    "name": "Product",
    "blocks": [
      {
        "type": "vendor",
        "name": "Vendor",
        "limit": 1
      },
      {
        "type": "title",
        "name": "Title",
        "limit": 1
      },
      {
        "type": "price",
        "name": "Price",
        "limit": 1
      },
      {
        "type": "variant_selector",
        "name": "Variant Selector",
        "limit": 1
      }, {
        "type": "quantity",
        "name": "Quantity",
        "limit": 1
      }, {
        "type": "description",
        "name": "Description",
        "limit": 1
      }, {
        "type": "checkout_buttons",
        "name": "Checkout Buttons",
        "limit": 1
      }
    ]
  }
{% endschema %}